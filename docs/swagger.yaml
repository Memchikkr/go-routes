basePath: /
definitions:
  models.AuthRequest:
    properties:
      auth_date:
        example: 1746370731
        type: integer
      first_name:
        example: Andrey
        type: string
      hash:
        example: 90ee68ec25e9b34019e...
        type: string
      id:
        example: 123456789
        type: integer
      last_name:
        example: Popov
        type: string
      photo_url:
        example: https://t.me/i/userpic/...
        type: string
      username:
        example: User
        type: string
    type: object
  models.AuthResponse:
    properties:
      access_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      refresh_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  models.ErrorResponse:
    properties:
      code:
        example: 401
        type: integer
      message:
        example: Invalid credentials
        type: string
    type: object
  models.RefreshRequest:
    properties:
      refresh_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API
  title: API
  version: "1.0"
paths:
  /auth:
    post:
      consumes:
      - application/json
      description: Выполняет аутентификацию и возвращает токен
      parameters:
      - description: Данные для входа
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Authentification
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Выполняет аутентификацию с помощью RefreshToken и возвращает новую
        пару токенов
      parameters:
      - description: Refresh token
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.RefreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Refresh tokens
      tags:
      - auth
swagger: "2.0"
